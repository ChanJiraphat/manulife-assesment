version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: manulife_postgres_prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-username}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-investment_portfolio}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - manulife_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-username} -d ${POSTGRES_DB:-investment_portfolio}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: manulife_backend_prod
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-username}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-investment_portfolio}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here-change-in-production}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY:-LBNC0VAU9E9EGQQO}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - manulife_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend (Production Build)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: manulife_frontend_prod
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
      - NEXT_PUBLIC_ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY:-LBNC0VAU9E9EGQQO}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - manulife_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  manulife_network:
    driver: bridge
